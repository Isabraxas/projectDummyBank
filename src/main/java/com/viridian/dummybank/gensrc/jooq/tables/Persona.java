/*
 * This file is generated by jOOQ.
*/
package com.viridian.dummybank.gensrc.jooq.tables;


import com.viridian.dummybank.gensrc.jooq.Indexes;
import com.viridian.dummybank.gensrc.jooq.Keys;
import com.viridian.dummybank.gensrc.jooq.Viridianbank;
import com.viridian.dummybank.gensrc.jooq.tables.records.PersonaRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Persona extends TableImpl<PersonaRecord> {

    private static final long serialVersionUID = 1939962426;

    /**
     * The reference instance of <code>viridianbank.Persona</code>
     */
    public static final Persona PERSONA = new Persona();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PersonaRecord> getRecordType() {
        return PersonaRecord.class;
    }

    /**
     * The column <code>viridianbank.Persona.id_persona</code>.
     */
    public final TableField<PersonaRecord, Long> ID_PERSONA = createField("id_persona", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>viridianbank.Persona.apellido_paterno</code>.
     */
    public final TableField<PersonaRecord, String> APELLIDO_PATERNO = createField("apellido_paterno", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>viridianbank.Persona.apellido_materno</code>.
     */
    public final TableField<PersonaRecord, String> APELLIDO_MATERNO = createField("apellido_materno", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>viridianbank.Persona.apellido_casado</code>.
     */
    public final TableField<PersonaRecord, String> APELLIDO_CASADO = createField("apellido_casado", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>viridianbank.Persona.nombre</code>.
     */
    public final TableField<PersonaRecord, String> NOMBRE = createField("nombre", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>viridianbank.Persona.documento_identidad</code>.
     */
    public final TableField<PersonaRecord, String> DOCUMENTO_IDENTIDAD = createField("documento_identidad", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>viridianbank.Persona.numero_documento</code>.
     */
    public final TableField<PersonaRecord, String> NUMERO_DOCUMENTO = createField("numero_documento", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>viridianbank.Persona.fecha_nacimiento</code>.
     */
    public final TableField<PersonaRecord, String> FECHA_NACIMIENTO = createField("fecha_nacimiento", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>viridianbank.Persona.lugar_nacimiento</code>.
     */
    public final TableField<PersonaRecord, String> LUGAR_NACIMIENTO = createField("lugar_nacimiento", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>viridianbank.Persona.nacionalidad</code>.
     */
    public final TableField<PersonaRecord, String> NACIONALIDAD = createField("nacionalidad", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>viridianbank.Persona.domicilio</code>.
     */
    public final TableField<PersonaRecord, String> DOMICILIO = createField("domicilio", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>viridianbank.Persona.domicilio_trabajo</code>.
     */
    public final TableField<PersonaRecord, String> DOMICILIO_TRABAJO = createField("domicilio_trabajo", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>viridianbank.Persona.telefono</code>.
     */
    public final TableField<PersonaRecord, String> TELEFONO = createField("telefono", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>viridianbank.Persona.email</code>.
     */
    public final TableField<PersonaRecord, String> EMAIL = createField("email", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>viridianbank.Persona.estado_civil</code>.
     */
    public final TableField<PersonaRecord, String> ESTADO_CIVIL = createField("estado_civil", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>viridianbank.Persona.profesion</code>.
     */
    public final TableField<PersonaRecord, String> PROFESION = createField("profesion", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>viridianbank.Persona.caracter_legal</code>.
     */
    public final TableField<PersonaRecord, String> CARACTER_LEGAL = createField("caracter_legal", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>viridianbank.Persona.nombre_conyuge</code>.
     */
    public final TableField<PersonaRecord, String> NOMBRE_CONYUGE = createField("nombre_conyuge", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>viridianbank.Persona.nombre_padre</code>.
     */
    public final TableField<PersonaRecord, String> NOMBRE_PADRE = createField("nombre_padre", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>viridianbank.Persona.nombre_madre</code>.
     */
    public final TableField<PersonaRecord, String> NOMBRE_MADRE = createField("nombre_madre", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * Create a <code>viridianbank.Persona</code> table reference
     */
    public Persona() {
        this(DSL.name("Persona"), null);
    }

    /**
     * Create an aliased <code>viridianbank.Persona</code> table reference
     */
    public Persona(String alias) {
        this(DSL.name(alias), PERSONA);
    }

    /**
     * Create an aliased <code>viridianbank.Persona</code> table reference
     */
    public Persona(Name alias) {
        this(alias, PERSONA);
    }

    private Persona(Name alias, Table<PersonaRecord> aliased) {
        this(alias, aliased, null);
    }

    private Persona(Name alias, Table<PersonaRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Viridianbank.VIRIDIANBANK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PERSONA_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<PersonaRecord, Long> getIdentity() {
        return Keys.IDENTITY_PERSONA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PersonaRecord> getPrimaryKey() {
        return Keys.KEY_PERSONA_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PersonaRecord>> getKeys() {
        return Arrays.<UniqueKey<PersonaRecord>>asList(Keys.KEY_PERSONA_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Persona as(String alias) {
        return new Persona(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Persona as(Name alias) {
        return new Persona(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Persona rename(String name) {
        return new Persona(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Persona rename(Name name) {
        return new Persona(name, null);
    }
}
