/*
 * This file is generated by jOOQ.
*/
package com.viridian.dummybank.gensrc.jooq.tables;


import com.viridian.dummybank.gensrc.jooq.Indexes;
import com.viridian.dummybank.gensrc.jooq.Keys;
import com.viridian.dummybank.gensrc.jooq.Viridianbank;
import com.viridian.dummybank.gensrc.jooq.tables.records.PersonaJuridicaRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PersonaJuridica extends TableImpl<PersonaJuridicaRecord> {

    private static final long serialVersionUID = 923240314;

    /**
     * The reference instance of <code>viridianbank.Persona_Juridica</code>
     */
    public static final PersonaJuridica PERSONA_JURIDICA = new PersonaJuridica();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PersonaJuridicaRecord> getRecordType() {
        return PersonaJuridicaRecord.class;
    }

    /**
     * The column <code>viridianbank.Persona_Juridica.id_cliente</code>.
     */
    public final TableField<PersonaJuridicaRecord, Long> ID_CLIENTE = createField("id_cliente", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>viridianbank.Persona_Juridica.nombre_razon</code>.
     */
    public final TableField<PersonaJuridicaRecord, String> NOMBRE_RAZON = createField("nombre_razon", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>viridianbank.Persona_Juridica.nit</code>.
     */
    public final TableField<PersonaJuridicaRecord, Long> NIT = createField("nit", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>viridianbank.Persona_Juridica.registro_fundaempresa</code>.
     */
    public final TableField<PersonaJuridicaRecord, String> REGISTRO_FUNDAEMPRESA = createField("registro_fundaempresa", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>viridianbank.Persona_Juridica.representante_legal</code>.
     */
    public final TableField<PersonaJuridicaRecord, Long> REPRESENTANTE_LEGAL = createField("representante_legal", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * Create a <code>viridianbank.Persona_Juridica</code> table reference
     */
    public PersonaJuridica() {
        this(DSL.name("Persona_Juridica"), null);
    }

    /**
     * Create an aliased <code>viridianbank.Persona_Juridica</code> table reference
     */
    public PersonaJuridica(String alias) {
        this(DSL.name(alias), PERSONA_JURIDICA);
    }

    /**
     * Create an aliased <code>viridianbank.Persona_Juridica</code> table reference
     */
    public PersonaJuridica(Name alias) {
        this(alias, PERSONA_JURIDICA);
    }

    private PersonaJuridica(Name alias, Table<PersonaJuridicaRecord> aliased) {
        this(alias, aliased, null);
    }

    private PersonaJuridica(Name alias, Table<PersonaJuridicaRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Viridianbank.VIRIDIANBANK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PERSONA_JURIDICA_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PersonaJuridicaRecord> getPrimaryKey() {
        return Keys.KEY_PERSONA_JURIDICA_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PersonaJuridicaRecord>> getKeys() {
        return Arrays.<UniqueKey<PersonaJuridicaRecord>>asList(Keys.KEY_PERSONA_JURIDICA_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PersonaJuridica as(String alias) {
        return new PersonaJuridica(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PersonaJuridica as(Name alias) {
        return new PersonaJuridica(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PersonaJuridica rename(String name) {
        return new PersonaJuridica(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PersonaJuridica rename(Name name) {
        return new PersonaJuridica(name, null);
    }
}
