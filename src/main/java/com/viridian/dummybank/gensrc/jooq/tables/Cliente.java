/*
 * This file is generated by jOOQ.
*/
package com.viridian.dummybank.gensrc.jooq.tables;


import com.viridian.dummybank.gensrc.jooq.Indexes;
import com.viridian.dummybank.gensrc.jooq.Keys;
import com.viridian.dummybank.gensrc.jooq.Viridianbank;
import com.viridian.dummybank.gensrc.jooq.tables.records.ClienteRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Cliente extends TableImpl<ClienteRecord> {

    private static final long serialVersionUID = -1029368961;

    /**
     * The reference instance of <code>viridianbank.Cliente</code>
     */
    public static final Cliente CLIENTE = new Cliente();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ClienteRecord> getRecordType() {
        return ClienteRecord.class;
    }

    /**
     * The column <code>viridianbank.Cliente.id_cliente</code>.
     */
    public final TableField<ClienteRecord, Long> ID_CLIENTE = createField("id_cliente", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>viridianbank.Cliente.tipo</code>.
     */
    public final TableField<ClienteRecord, String> TIPO = createField("tipo", org.jooq.impl.SQLDataType.VARCHAR(1).nullable(false), this, "");

    /**
     * Create a <code>viridianbank.Cliente</code> table reference
     */
    public Cliente() {
        this(DSL.name("Cliente"), null);
    }

    /**
     * Create an aliased <code>viridianbank.Cliente</code> table reference
     */
    public Cliente(String alias) {
        this(DSL.name(alias), CLIENTE);
    }

    /**
     * Create an aliased <code>viridianbank.Cliente</code> table reference
     */
    public Cliente(Name alias) {
        this(alias, CLIENTE);
    }

    private Cliente(Name alias, Table<ClienteRecord> aliased) {
        this(alias, aliased, null);
    }

    private Cliente(Name alias, Table<ClienteRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Viridianbank.VIRIDIANBANK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CLIENTE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ClienteRecord, Long> getIdentity() {
        return Keys.IDENTITY_CLIENTE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ClienteRecord> getPrimaryKey() {
        return Keys.KEY_CLIENTE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ClienteRecord>> getKeys() {
        return Arrays.<UniqueKey<ClienteRecord>>asList(Keys.KEY_CLIENTE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Cliente as(String alias) {
        return new Cliente(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Cliente as(Name alias) {
        return new Cliente(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Cliente rename(String name) {
        return new Cliente(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Cliente rename(Name name) {
        return new Cliente(name, null);
    }
}
