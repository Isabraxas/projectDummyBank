/*
 * This file is generated by jOOQ.
*/
package com.viridian.dummybank.gensrc.jooq.tables;


import com.viridian.dummybank.gensrc.jooq.Indexes;
import com.viridian.dummybank.gensrc.jooq.Keys;
import com.viridian.dummybank.gensrc.jooq.Viridianbank;
import com.viridian.dummybank.gensrc.jooq.tables.records.PersonaNaturalRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PersonaNatural extends TableImpl<PersonaNaturalRecord> {

    private static final long serialVersionUID = -1687408652;

    /**
     * The reference instance of <code>viridianbank.Persona_Natural</code>
     */
    public static final PersonaNatural PERSONA_NATURAL = new PersonaNatural();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PersonaNaturalRecord> getRecordType() {
        return PersonaNaturalRecord.class;
    }

    /**
     * The column <code>viridianbank.Persona_Natural.id_cliente</code>.
     */
    public final TableField<PersonaNaturalRecord, Long> ID_CLIENTE = createField("id_cliente", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>viridianbank.Persona_Natural.persona_id</code>.
     */
    public final TableField<PersonaNaturalRecord, Long> PERSONA_ID = createField("persona_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * Create a <code>viridianbank.Persona_Natural</code> table reference
     */
    public PersonaNatural() {
        this(DSL.name("Persona_Natural"), null);
    }

    /**
     * Create an aliased <code>viridianbank.Persona_Natural</code> table reference
     */
    public PersonaNatural(String alias) {
        this(DSL.name(alias), PERSONA_NATURAL);
    }

    /**
     * Create an aliased <code>viridianbank.Persona_Natural</code> table reference
     */
    public PersonaNatural(Name alias) {
        this(alias, PERSONA_NATURAL);
    }

    private PersonaNatural(Name alias, Table<PersonaNaturalRecord> aliased) {
        this(alias, aliased, null);
    }

    private PersonaNatural(Name alias, Table<PersonaNaturalRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Viridianbank.VIRIDIANBANK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PERSONA_NATURAL_PERSONA_ID, Indexes.PERSONA_NATURAL_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PersonaNaturalRecord> getPrimaryKey() {
        return Keys.KEY_PERSONA_NATURAL_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PersonaNaturalRecord>> getKeys() {
        return Arrays.<UniqueKey<PersonaNaturalRecord>>asList(Keys.KEY_PERSONA_NATURAL_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<PersonaNaturalRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<PersonaNaturalRecord, ?>>asList(Keys.PERSONA_NATURAL_IBFK_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PersonaNatural as(String alias) {
        return new PersonaNatural(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PersonaNatural as(Name alias) {
        return new PersonaNatural(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PersonaNatural rename(String name) {
        return new PersonaNatural(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PersonaNatural rename(Name name) {
        return new PersonaNatural(name, null);
    }
}
