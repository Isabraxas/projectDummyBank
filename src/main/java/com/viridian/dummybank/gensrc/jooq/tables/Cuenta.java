/*
 * This file is generated by jOOQ.
*/
package com.viridian.dummybank.gensrc.jooq.tables;


import com.viridian.dummybank.gensrc.jooq.Indexes;
import com.viridian.dummybank.gensrc.jooq.Keys;
import com.viridian.dummybank.gensrc.jooq.Viridianbank;
import com.viridian.dummybank.gensrc.jooq.tables.records.CuentaRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Cuenta extends TableImpl<CuentaRecord> {

    private static final long serialVersionUID = 1152300390;

    /**
     * The reference instance of <code>viridianbank.cuenta</code>
     */
    public static final Cuenta CUENTA = new Cuenta();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CuentaRecord> getRecordType() {
        return CuentaRecord.class;
    }

    /**
     * The column <code>viridianbank.cuenta.id_cuenta</code>.
     */
    public final TableField<CuentaRecord, Long> ID_CUENTA = createField("id_cuenta", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>viridianbank.cuenta.numero_cuenta</code>.
     */
    public final TableField<CuentaRecord, Long> NUMERO_CUENTA = createField("numero_cuenta", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>viridianbank.cuenta.tipo</code>.
     */
    public final TableField<CuentaRecord, String> TIPO = createField("tipo", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>viridianbank.cuenta.saldo</code>.
     */
    public final TableField<CuentaRecord, Long> SALDO = createField("saldo", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>viridianbank.cuenta.cliente_id</code>.
     */
    public final TableField<CuentaRecord, Long> CLIENTE_ID = createField("cliente_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * Create a <code>viridianbank.cuenta</code> table reference
     */
    public Cuenta() {
        this(DSL.name("cuenta"), null);
    }

    /**
     * Create an aliased <code>viridianbank.cuenta</code> table reference
     */
    public Cuenta(String alias) {
        this(DSL.name(alias), CUENTA);
    }

    /**
     * Create an aliased <code>viridianbank.cuenta</code> table reference
     */
    public Cuenta(Name alias) {
        this(alias, CUENTA);
    }

    private Cuenta(Name alias, Table<CuentaRecord> aliased) {
        this(alias, aliased, null);
    }

    private Cuenta(Name alias, Table<CuentaRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Viridianbank.VIRIDIANBANK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CUENTA_CLIENTE_ID_FK0, Indexes.CUENTA_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CuentaRecord, Long> getIdentity() {
        return Keys.IDENTITY_CUENTA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CuentaRecord> getPrimaryKey() {
        return Keys.KEY_CUENTA_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CuentaRecord>> getKeys() {
        return Arrays.<UniqueKey<CuentaRecord>>asList(Keys.KEY_CUENTA_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<CuentaRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<CuentaRecord, ?>>asList(Keys.CLIENTE_ID_FK0);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Cuenta as(String alias) {
        return new Cuenta(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Cuenta as(Name alias) {
        return new Cuenta(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Cuenta rename(String name) {
        return new Cuenta(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Cuenta rename(Name name) {
        return new Cuenta(name, null);
    }
}
